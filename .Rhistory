x=read.csv('/Users/dan/Dropbox/corpus/slifting/slifting.txt', sep='\t', header=T)
length(x[,1])
levels(x$match)
f = function(s) substr(s, 2, (length(s)-1))
f(levels(x$match)[3477])
?substr
substr("bioen", 2, 5)
substr("bioen", 2, 4)
levels(x$match)[1]
f = function(s) substr(s, 2, (length(s)-2))
f(levels(x$match)[1])
length(levels(x$match)[1])
f = function(s) substr(s, 2, (nchar(s)-2))
f(levels(x$match)[1])
slift = function(s) substr(s, 3, (nchar(s)-2))
x=read.csv('/Users/dan/Dropbox/corpus/slifting/slifting.txt', sep='\t', header=T)
colnames(x)
slift = function(s) substr(s, 3, nchar(s)-2)
slift(d$match[1])
rm(x)
d=read.csv('/Users/dan/Dropbox/corpus/slifting/slifting.txt', sep='\t', header=T)
slift = function(s) substr(s, 3, nchar(s)-2)
slift(d$match[1])
d$match[1]
nchar(d$match[1])
slift = function(s) substr(as.character(s), 3, (nchar(as.character(s))-2))
slift(d$match[1])
slift = function(s) substr(as.character(s), 3, (nchar(as.character(s))-1))
slift(d$match[1])
d$slift = sapply(d$match, FUN=slift)
levels(d$slift)
d$slift = factor(d$slift)
levels(d$slift)
t = levels(d$slift)[1]
t
t = levels(d$slift)[3]
t
t = levels(d$slift)[50]
t
strsplit(t, ' ')[1]
strsplit(t, ' ')[[1]]
strsplit(t, ' ')[[1]][1]
d$pronoun = sapply(d$slift, FUN=function(s) strsplit(s, ' ')[[1]][1])
d$verb = sapply(d$slift, FUN=function(s) strsplit(s, ' ')[[1]][2])
d$pronoun = sapply(d$slift, FUN=function(s) {
t = strsplit(s, ' ')[[1]]
if (length(t) > 1) return(t[1])
else print(s)
})
typeof(t)
typeof(t) == 'character'
d$pronoun = sapply(d$slift, FUN=function(s) {
if (typeof(s) == 'character') {
t = strsplit(s, ' ')[[1]][1]
} else {
print(s)
return(NA)
}
})
d$pronoun = sapply(d$slift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][1])
d$pronoun = factor(d$pronoun)
levels(d$pronoun)
d$pronoun = factor(sapply(d$slift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][2]]))
d$pronoun = factor(sapply(d$slift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][2]))
d$pronoun = factor(sapply(d$slift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][1]))
d$verb = factor(sapply(d$slift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][2]))
levels(d$verb)
regret = display('regret')
display = function(verb) d$context[which(d$verb) == verb]
regret = display('regret')
verb = 'regret'
indices = which(d$verb) == verb
indices = which(d$verb == verb)
indices
length(indices)
display = function(verb) {
indices = which(d$verb == verb)
if (length(indices) == 0) print(paste('No match for verb', verb))
else return(d$context[indices])
}
display('regret')
regret = display('regret')
said = display('said')
length(said)
said[1] # show first example
said[2] # show second example
setwd('/Users/dan/Dropbox/corpus/slifting/')
t
?write.csv
i=1
v = subset(d, verb == verbs[i])
setwd('/Users/dan/Dropbox/corpus/slifting/')
# Todor: comment out previous line and insert one with your own working directory
d=read.csv('slifting.txt', sep='\t', header=T)
slift = function(s) substr(as.character(s), 3, (nchar(as.character(s))-1))
d$slift = factor(sapply(d$match, FUN=slift))
# show all the (possible) slifts found
levels(d$slift)
# 3479 candidates
d$pronoun = factor(sapply(d$slift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][1]))
d$verb = factor(sapply(d$slift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][2]))
v = subset(d, verb == verbs[i])
verbs = levels(d$verb)
v = subset(d, verb == verbs[i])
write.csv(v, file=paste('verbs/', verb, '.txt', sep=''))
write.csv(v, file=paste('verbs/', verbs[i], '.txt', sep=''))
for (i in 1:length(verbs)) {
v = subset(d, verb == verbs[i])
write.csv(v, file=paste('verbs/', verbs[i], '.txt', sep=''))
}
rm(d)
length(d$verb)
setwd('/Users/dan/Dropbox/corpus/slifting/')
# Todor: comment out previous line and insert one with your own working directory
d=read.csv('slifting.txt', sep='\t', header=T)
slift = function(s) substr(as.character(s), 3, (nchar(as.character(s))-1))
d$slift = factor(sapply(d$match, FUN=slift))
# show all the (possible) slifts found
# levels(d$slift)
# 3479 candidates
d$pronoun = factor(sapply(d$slift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][1]))
d$verb = factor(sapply(d$slift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][2]))
# write to file by verb
verbs = levels(d$verb)
for (i in 1:length(verbs)) {
v = subset(d, verb == verbs[i])
write.csv(v, file=paste('verbs/', verbs[i], '.txt', sep='\t'))
}
# this isn't working correctly: the output files are only 115 mb
# as opposed to original 215 mb
# FIX
rm(d)
ct = 0
for (i in 1:length(verbs)) {
v = subset(d, verb == verbs[i])
#write.csv(v, file=paste('verbs/', verbs[i], '.txt', sep='\t'))
ct <<- ct + length(v[,1])
}
setwd('/Users/dan/Dropbox/corpus/slifting/')
# Todor: comment out previous line and insert one with your own working directory
d=read.csv('slifting.txt', sep='\t', header=T)
slift = function(s) substr(as.character(s), 3, (nchar(as.character(s))-1))
d$slift = factor(sapply(d$match, FUN=slift))
# show all the (possible) slifts found
# levels(d$slift)
# 3479 candidates
d$pronoun = factor(sapply(d$slift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][1]))
d$verb = factor(sapply(d$slift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][2]))
# write to file by verb
verbs = levels(d$verb)
ct = 0
for (i in 1:length(verbs)) {
v = subset(d, verb == verbs[i])
#write.csv(v, file=paste('verbs/', verbs[i], '.txt', sep='\t'))
ct = ct + length(v[,1])
}
ct
length(d[,1]) # should be equal
# write to file by verb
verbs = levels(d$verb)
for (i in 1:length(verbs)) {
#v = subset(d, verb == verbs[i])
v = d[verb == verb,]
write.csv(v, file=paste('verbs/', verbs[i], '.txt', sep='\t'))
}
for (i in 1:length(verbs)) {
#v = subset(d, verb == verbs[i])
v = d[verb == verbs[i],]
write.csv(v, file=paste('verbs/', verbs[i], '.txt', sep='\t'))
}
for (i in 1:length(verbs)) {
#v = subset(d, verb == verbs[i])
v = d[d$verb == verbs[i],]
write.csv(v, file=paste('verbs/', verbs[i], '.txt', sep='\t'))
}
setwd('/Users/dan/Dropbox/corpus/slifting/')
for (i in 1:length(verbs)) {
#v = subset(d, verb == verbs[i])
v = d[d$verb == verbs[i],]
write.csv(v, file=paste('verbs/', verbs[i], '.txt', sep='\t'))
}
verbs = levels(d$verb)
for (i in 1:length(verbs)) {
#v = subset(d, verb == verbs[i])
v = d[d$verb == verbs[i],]
write.csv(v, file=paste('verbs/', verbs[i], '.txt'), sep='\t')
}
warnings()
verbs = levels(d$verb)
for (i in 1:length(verbs)) {
#v = subset(d, verb == verbs[i])
v = d[d$verb == verbs[i],]
write.table(v, file=paste('verbs/', verbs[i], '.txt', sep=''), sep='\t')
}
colnames(d)
head(d[,-1])
d = d[,-1]
colnames(d)
d = d[,-3]
colnames(d)
d = d[,c(3,4,1,2)]
colnames(d)
levels(d$verb)
verbs = levels(d$verb)
for (i in 1:length(verbs)) {
#v = subset(d, verb == verbs[i])
v = d[d$verb == verbs[i],]
write.table(v, file=paste('verbs/', verbs[i], '.txt', sep=''), sep='\t')
}
rm(d)
?read.csv
load = function(verb) read.csv(file=paste('verbs/', verbs, '.txt', sep=''), header=T)
regret = load('regret')
said = load('said')
setwd('/Users/dan/Dropbox/corpus/slifting/')
said = load('said')
load = function(verb) read.csv(file=paste('verbs/', verb, '.txt', sep=''), header=T)
said = load('said')
length(said) # 89,676 examples
said[1] # show first example
setwd('/Users/dan/Dropbox/corpus/slifting/')
d=read.csv('slifting.txt', sep='\t', header=T)
slift = function(s) substr(as.character(s), 3, (nchar(as.character(s))-1))
d$possibleSlift = factor(sapply(d$match, FUN=slift))
d$pronoun = factor(sapply(d$slift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][1]))
d$pronoun = factor(sapply(d$possibleSlift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][1]))
d$verb = factor(sapply(d$possibleSlift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][2]))
levels(d$verb)
d = d[,-1]
d = d[,-3]
colnames(d)
d = d[,c(3,4,1,2)]
colnames(d)
said = subset(d, verb=='said')
length(said[,1])
head(said)
write.table(said, file=paste('verbs/said.txt', sep=''), sep='\t')
which(d$verb == 'said')
which(levels(d$verb) == 'said')
i = 1522
rm(said)
v = subset(d, verb == verbs[i])
length(v[,1])
write.table(v, file=paste('verbs/', verbs[i], '.txt', sep=''), sep='\t')
sapply(verbs, FUN=function(v) {
write.table(v, file=paste('verbs/', v, '.txt', sep=''), sep='\t')
})
levels(d$verb)[1500:1600]
gsub("/", "-", "said.MDNM/")
d$verb = sapply(d$verb, FUN=function (s) gsub("/", "-", s))
d$verb = sapply(d$verb, FUN=function (s) gsub(".", ". ", s))
strsplit(as.character('boq iboqe'), ' ')
strsplit(as.character('boq iboqe'), ' ')[[1]]
strsplit(as.character('boqiboqe'), ' ')[[1]]
strsplit(as.character('boqiboqe'), ' ')[[1]][1]
d$verb = sapply(d$verb, FUN=function(s) strsplit(as.character(s), ' ')[[1]][2])
verbs = levels(d$verb)
length(verbs)
setwd('/Users/dan/Dropbox/corpus/slifting/')
# Todor: comment out previous line and insert one with your own working directory
d=read.csv('slifting.txt', sep='\t', header=T)
slift = function(s) substr(as.character(s), 3, (nchar(as.character(s))-1))
d$possibleSlift = factor(sapply(d$match, FUN=slift))
d$pronoun = factor(sapply(d$possibleSlift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][1]))
d$verb = factor(sapply(d$possibleSlift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][2]))
levels(d$verb)
d = d[,-1]
d = d[,-3]
d = d[,c(3,4,1,2)]
colnames(d)
d$verb = sapply(d$verb, FUN=function (s) gsub("/", "-", s))
d$verb = sapply(d$verb, FUN=function (s) gsub(".", ". ", s))
# write to file by verb
verbs = levels(d$verb)
sapply(verbs, FUN=function(v) {
write.table(v, file=paste('verbs/', v, '.txt', sep=''), sep='\t')
})
sapply(verbs, FUN=function(v) {
ld = subset(d, verb==v)
write.table(ld, file=paste('verbs/', v, '.txt', sep=''), sep='\t')
})
sapply(verbs, FUN=function(v) {
ld = subset(d, verb==v)
write.table(ld, file=paste('verbs/', v, '.txt', sep=''), sep='\t')
})
verbs = levels(d$verb)
for (i in 1:length(verbs)) {
ld = subset(d, verb==verbs[i])
write.table(ld, file=paste('verbs/', verbs[i], '.txt', sep=''), sep='\t')
}
head(ld)
ld
levels(d$verb)
verbs = levels(factor(d$verb))
verbs
d=read.csv('slifting.txt', sep='\t', header=T)
slift = function(s) substr(as.character(s), 3, (nchar(as.character(s))-1))
d$possibleSlift = factor(sapply(d$match, FUN=slift))
d$pronoun = factor(sapply(d$possibleSlift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][1]))
d$verb = factor(sapply(d$possibleSlift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][2]))
levels(d$verb)
d = d[,-1]
d = d[,-3]
d = d[,c(3,4,1,2)]
colnames(d)
d$verb = sapply(d$verb, FUN=function (s) gsub("/", "-", s))
verbs = levels(factor(d$verb))
verbs
for (i in 1:length(verbs)) {
ld = subset(d, verb==verbs[i])
write.table(ld, file=paste('verbs/', verbs[i], '.txt', sep=''), sep='\t')
}
levels(d$verb)
d$verb = factor(sapply(d$verb, FUN=function (s) gsub("/", "-", s)))
verbs = levels(d$verb)
setwd('/Users/dan/Dropbox/corpus/slifting/verbs')
for (i in 1:length(verbs)) {
ld = subset(d, verb==verbs[i])
write.table(ld, file=paste(verbs[i], '.txt', sep=''), sep='\t')
}
length(verbs)
verbs
rm(d)
load = function(verb) {
setwd('/Users/dan/Dropbox/corpus/slifting/verbs')
read.csv(file=paste(verb, '.txt', sep=''), header=T)
}
regret = load('regret')
said = load('said')
length(said) # 89,676 examples
length(said[,1]) # 89,676 examples
said
said = load('SAID')
length(said[,1]) # 89,676 examples
said[1] # show first example
said[2] # show second example
said[1,] # show first example
said[2,] # show second example
read.csv(file=paste(verb, '.txt', sep=''), header=T, SEP='\t')
load = function(verb) {
setwd('/Users/dan/Dropbox/corpus/slifting/verbs')
read.table(file=paste(verb, '.txt', sep=''), header=T, SEP='\t')
}
said = load('SAID')
load = function(verb) {
setwd('/Users/dan/Dropbox/corpus/slifting/verbs')
read.table(file=paste(verb, '.txt', sep=''), header=T, sep='\t')
}
said = load('SAID')
length(said[,1]) # 89,676 examples
said = load('said')
length(said[,1]) # 89,676 examples
said
d=read.csv('slifting.txt', sep='\t', header=T)
setwd('/Users/dan/Dropbox/corpus/slifting/')
d=read.csv('slifting.txt', sep='\t', header=T)
said = subset(d, verb=='said')
slift = function(s) substr(as.character(s), 3, (nchar(as.character(s))-1))
d$possibleSlift = factor(sapply(d$match, FUN=slift))
d$pronoun = factor(sapply(d$possibleSlift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][1]))
d$verb = factor(sapply(d$possibleSlift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][2]))
levels(d$verb)
d = d[,-1]
d = d[,-3]
d = d[,c(3,4,1,2)]
colnames(d)
d$verb = factor(sapply(d$verb, FUN=function (s) gsub("/", "-", s)))
said = subset(d, verb=='said')
length(said[,1])
which(verbs=='said')
i=1522
ld = subset(d, verb==verbs[i])
length(ld[,1])
rm(said)
write.table(ld, file=paste(verbs[i], '.txt', sep=''), sep='\t')
verbs[i]
paste(verbs[i], '.txt', sep='')
verbs[1522]
verbs[1510:1540]
tolower('HGIO')
d$verb = factor(sapply(d$verb, FUN=function (s) tolower(s)))
length(levels(d$verb))
setwd('/Users/dan/Dropbox/corpus/slifting/')
# Todor: comment out previous line and insert one with your own working directory
d=read.csv('slifting.txt', sep='\t', header=T)
slift = function(s) substr(as.character(s), 3, (nchar(as.character(s))-1))
d$possibleSlift = factor(sapply(d$match, FUN=slift))
d$pronoun = factor(sapply(d$possibleSlift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][1]))
d$verb = factor(sapply(d$possibleSlift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][2]))
length(levels(d$verb))
d = d[,-1]
d = d[,-3]
d = d[,c(3,4,1,2)]
colnames(d)
d$verb = factor(sapply(d$verb, FUN=function (s) gsub("/", "-", s)))
d$verb = factor(sapply(d$verb, FUN=function (s) tolower(s)))
# write to file by verb
verbs = levels(d$verb)
for (i in 1:length(verbs)) {
ld = subset(d, verb==verbs[i])
write.table(ld, file=paste('verbs/', verbs[i], '.txt', sep=''), sep='\t')
}
# the output files are only 166 mb
# as opposed to original 215 mb
# there must be a bug in the write-to-file code ...
rm(d)
# show full context of every example involving a particular verb
load = function(verb) {
read.table(file=paste('verbs/', verb, '.txt', sep=''), header=T, sep='\t')
}
rm(d)
# show full context of every example involving a particular verb
load = function(verb) {
read.table(file=paste('verbs/', verb, '.txt', sep=''), header=T, sep='\t')
}
regret = load('regret')
said = load('said')
length(said[,1]) # should be 89,676 lines
said[1,] # show first example
said[2,] # show second example
etwd('/Users/dan/Dropbox/corpus/slifting/')
d=read.csv('slifting-exx.txt', sep='\t', header=T)
slift = function(s) substr(as.character(s), 3, (nchar(as.character(s))-1))
d$possibleSlift = factor(sapply(d$match, FUN=slift))
d$pronoun = factor(sapply(d$possibleSlift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][1]))
d$verb = factor(sapply(d$possibleSlift, FUN=function(s) strsplit(as.character(s), ' ')[[1]][2]))
d$verb = factor(sapply(d$verb, FUN=function (s) tolower(gsub("/", "-", s))))
verbs = levels(d$verb)
rm(d)
write.table(verbs, file='verbs.txt')
verbs = read.table('verbs.txt')
verbs
head(verbs)
verbs = read.table('verbs.txt')[,1]
head(verbs)
length(verbs)
typeof(verbs)
verbs = as.vector(read.table('verbs.txt')[,1])
verbs[1]
verbs[2]
length(verbs)
which(verbs=='said')
verbs[1:100]
verbs[1:200]
verbs[1:300]
